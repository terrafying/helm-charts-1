apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-manager-cm
data:
  application.conf: |
    play.crypto.secret="^<csmm5Fx4d=r2HEX8pelM3iBkFVv?k[mc;IZE<_Qoq8EkX_/7@Zt6dP05Pzea3U"
    
    play.i18n.langs=["en"]
    
    play.http.requestHandler = "play.http.DefaultHttpRequestHandler"
    play.http.context = "/kafka/manager/"
    play.application.loader=loader.KafkaManagerLoader
    
    kafka-manager.zkhosts="{{ .Values.zookeeper_connect }}"
    pinned-dispatcher.type="PinnedDispatcher"
    pinned-dispatcher.executor="thread-pool-executor"
    application.features=["KMClusterManagerFeature","KMTopicManagerFeature","KMPreferredReplicaElectionFeature","KMReassignPartitionsFeature"]
    
    akka {
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    loglevel = "INFO"
    }
    
    basicAuthentication.enabled=true
    basicAuthentication.username="admin"
    basicAuthentication.password="barmaglot"
    basicAuthentication.realm="Kafka-Manager"
    basicAuthentication.excluded=["/api/health"]
    
    kafka-manager.consumer.properties.file=${?CONSUMER_PROPERTIES_FILE}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: 2018-04-03T13:55:07Z
  generation: 1
  labels:
    run: kafka-manager
  name: kafka-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      run: kafka-manager
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        run: kafka-manager
    spec:
      containers:
      - env:
        - name: KM_CONFIGFILE
          value: "/application.conf"
        image: ihardz/kafka-manager:latest
        imagePullPolicy: Always
        name: kafka-manager
        ports:
        - containerPort: 9000
          protocol: TCP
        volumeMounts:
        - name: kafka-manager-config
          mountPath: /application.conf
          subPath: application.conf
      volumes:
      - name: kafka-manager-config
        configMap:
          name: kafka-manager-cm
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-manager-service
spec:
  selector:
    run: kafka-manager
  ports:
    - name: http
      protocol: TCP
      port: 9000
      targetPort: 9000
