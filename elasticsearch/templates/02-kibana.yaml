apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-cm
  namespace: {{ .Values.namespace }}
data:
  kibana.yml: | 
{{ .Files.Get "kibana.yml" }}
---
apiVersion: v1
kind: Service
metadata:
  name: kibana-svc
  namespace: {{ .Values.namespace }}
  labels:
    component: kibana
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "Kibana"
spec:
  ports:
  - name: ui
    port: {{ .Values.kibana.ports.containerPort }}
    protocol: TCP
    targetPort: {{ .Values.kibana.ports.containerPort }}
  selector:
    component: {{ .Values.kibana.component }}
  externalIPs:
  - {{ .Values.externalIPs }}
---
kind: ReplicationController
apiVersion: v1
metadata:
  name: kibana-controller
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.kibana.replicas }}
  selector:
    component: {{ .Values.kibana.component }}
  template:
    metadata:
      labels:
        component: {{ .Values.kibana.component }}
    spec:
      containers:
      - name: kibana
        image: {{ .Values.kibana.image.registry }}:{{ .Values.kibana.image.tag }}
        resources:
          limits:
            memory: {{ .Values.kibana.resources.limits.memory }}
            cpu: {{ .Values.kibana.resources.limits.cpu }}
          requests:
            memory: {{ .Values.kibana.resources.requests.memory }}
            cpu: {{ .Values.kibana.resources.requests.cpu }}
        ports:
        - containerPort: {{ .Values.kibana.ports.containerPort }}
          name: ui
          protocol: TCP
        volumeMounts:
        - name: kibana-config
          mountPath: /usr/share/kibana/config/kibana.yml
          subPath: kibana.yml
      nodeSelector:
        statefull-set: "true"
      volumes:
      - name: kibana-config
        configMap:
          name: kibana-cm