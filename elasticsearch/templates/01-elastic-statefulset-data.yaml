apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    app: {{ .Values.elastic.data.app }}
  name: {{ .Values.elastic.data.name }}
  namespace: {{ .Values.namespace }}
spec:
  podManagementPolicy: {{ .Values.elastic.data.podManagementPolicy }}
  replicas: {{ .Values.elastic.data.replicas }}
  revisionHistoryLimit: {{ .Values.elastic.data.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ .Values.elastic.data.app }}
  serviceName: es-data-svc
  template:
    metadata:
      labels:
        app: {{ .Values.elastic.data.app }}
    spec:
      containers:
      - name: es-data
        image: {{ .Values.elastic.image.registry }}:{{ .Values.elastic.image.tag }}
        imagePullPolicy: {{ .Values.elastic.image.imagePullPolicy }}
        securityContext:
          privileged: {{ .Values.elastic.securityContext.privileged }}
          runAsUser: {{ .Values.elastic.securityContext.runAsUser }}
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ES_MASTER
          value: "false"
        - name: ES_DATA
          value: "true"
        - name: ES_INGEST
          value: "true"
        command:
        - /bin/bash
        - -c
        - --
        args : 
        - |
          ulimit -l unlimited && \
          /sbin/sysctl -w vm.max_map_count=262144 && \
          chown -R elasticsearch:elasticsearch /data && \
          /usr/local/bin/docker-entrypoint.sh
        ports:
        - containerPort: {{ .Values.elastic.ports.clientport }}
          name: client
          protocol: TCP
        - containerPort: {{ .Values.elastic.ports.transportport }}
          name: transport
          protocol: TCP
#        livenessProbe:
#          failureThreshold: {{ .Values.elastic.livenessProbe.failureThreshold }}
#          initialDelaySeconds: {{ .Values.elastic.livenessProbe.initialDelaySeconds }}
#          periodSeconds: {{ .Values.elastic.livenessProbe.periodSeconds }}
#          successThreshold: {{ .Values.elastic.livenessProbe.successThreshold }}
#          tcpSocket:
#            port: transport
#          timeoutSeconds: {{ .Values.elastic.livenessProbe.timeoutSeconds }}
        volumeMounts:
        - name: es-data
          mountPath: /data
          subPath: elasticsearch
        - name: es-data
          mountPath: /usr/share/elasticsearch/plugins
          subPath: plug
        - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          name: es-config
          subPath: elasticsearch.yml
        - mountPath: /usr/share/elasticsearch/config/jvm.options
          name: es-config-jvm
          subPath: jvm.options
      nodeSelector:
        statefull-set: "true"
      dnsPolicy: ClusterFirst
      volumes:
      - configMap:
          defaultMode: {{ .Values.elastic.volumes.configMap.defaultMode }}
          name: es-cm
        name: es-config
      - configMap:
          defaultMode: {{ .Values.elastic.volumes.configMap.defaultMode }}
          name: es-cm-jvm-data
        name: es-config-jvm
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.elastic.data.name }}
      annotations:
        volume.beta.kubernetes.io/storage-class: "gomel-nfs"
      labels:
        app: {{ .Values.elastic.data.app }}
    spec:
      accessModes: [ "ReadWriteMany" ]
      resources:
        requests:
          storage: {{ .Values.elastic.data.volumeClaimTemplates.spec.resources.storage }}
          iops: {{ .Values.elastic.data.volumeClaimTemplates.spec.resources.iops}}