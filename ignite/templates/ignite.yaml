kind: ConfigMap
apiVersion: v1
metadata:
  name: ignite-cm
data:
  example-kube.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:util="http://www.springframework.org/schema/util"
        xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/util
            http://www.springframework.org/schema/util/spring-util.xsd">
        <bean class="org.apache.ignite.configuration.IgniteConfiguration">
            <property name="networkTimeout" value="150000"/>
            <property name="gridLogger">
                <bean class="org.apache.ignite.logger.log4j.Log4JLogger">
                    <constructor-arg type="java.lang.String" value="/data/ignite/log4j.xml"/>
                </bean>
            </property>
            <property name="discoverySpi">
                <bean class="org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi">
                    <property name="networkTimeout" value="150000" />
                    <property name="ipFinder">
                        <bean class="org.apache.ignite.spi.discovery.tcp.ipfinder.kubernetes.TcpDiscoveryKubernetesIpFinder">
                            <property name="serviceName" value="ignite-svc"/>
                            <property name="namespace" value="ignite"/>
                        </bean>
                    </property>
                </bean>
            </property>
            <property name="communicationSpi">
                <bean class="org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi">
                    <property name="messageQueueLimit" value="1500" />
                </bean>
            </property>
            <property name="dataStorageConfiguration">
                <bean class="org.apache.ignite.configuration.DataStorageConfiguration">
                    <property name="defaultDataRegionConfiguration">
                        <bean class="org.apache.ignite.configuration.DataRegionConfiguration">
                            <property name="name" value="default_data_region"/>
                            <property name="initialSize" value="#{256 * 1024 * 1024}"/>
                            <property name="maxSize" value="#{1 * 1024 * 1024 * 1024}"/>
                        </bean>
                    </property>
                </bean>
            </property>
            <property name="cacheConfiguration">
                <list>
                    <!-- Partitioned cache example configuration (Atomic mode). -->
                    <bean class="org.apache.ignite.configuration.CacheConfiguration">
                        <property name="name" value="default"/>
                        <property name="cacheMode" value="PARTITIONED"/>
                        <property name="atomicityMode" value="ATOMIC"/>
                        <property name="backups" value="1"/>
                    </bean>
                </list>
            </property>
        </bean>
    </beans>
  log4j.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN"
        "http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/xml/doc-files/log4j.dtd">
    <!--
        Default log4j configuration for Ignite.
    -->
    <log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/" debug="false">
        <!--Logs all ERROR messages to console.-->
        <appender name="CONSOLE_ERR" class="org.apache.log4j.ConsoleAppender">
            <!-- Log to STDERR. -->
            <param name="Target" value="System.err"/>
    
            <!-- Log from ERROR and higher (change to WARN if needed). -->
            <param name="Threshold" value="ERROR"/>
    
            <!-- The default pattern: Date Priority [Category] Message\n -->
            <layout class="org.apache.log4j.PatternLayout">
                <param name="ConversionPattern" value="[%d{ISO8601}][%-5p][%t][%c{1}] %m%n"/>
            </layout>
        </appender>
    
        <!--Logs all output to specified file.By default, the logging goes to IGNITE_HOME/work/log folder-->
        <appender name="FILE" class="org.apache.ignite.logger.log4j.Log4jRollingFileAppender">
            <param name="Threshold" value="DEBUG"/>
            <param name="File" value="${IGNITE_HOME}/work/log/ignite.log"/>
            <param name="Append" value="true"/>
            <param name="MaxFileSize" value="10MB"/>
            <param name="MaxBackupIndex" value="10"/>
            <layout class="org.apache.log4j.PatternLayout">
                <param name="ConversionPattern" value="[%d{ISO8601}][%-5p][%t][%c{1}] %m%n"/>
            </layout>
        </appender>
    
        <!--
        <category name="org.apache.ignite">
            <level value="DEBUG"/>
        </category>
        -->
        <!--Uncomment to disable courtesy notices, such as SPI configuration consistency warnings.-->
        <!--
        <category name="org.apache.ignite.CourtesyConfigNotice">
            <level value="OFF"/>
        </category>
        -->
        <category name="org.springframework">
            <level value="WARN"/>
        </category>
    
        <category name="org.eclipse.jetty">
            <level value="WARN"/>
        </category>
        <!--Avoid warnings about failed bind attempt when multiple nodes running on the same host.-->
        <category name="org.eclipse.jetty.util.log">
            <level value="ERROR"/>
        </category>
        
        <category name="org.eclipse.jetty.util.component">
            <level value="ERROR"/>
        </category>
    
        <category name="com.amazonaws">
            <level value="WARN"/>
        </category>
        
        <!-- Default settings. -->
        <root>
            <!-- Print out all info by default. -->
            <level value="INFO"/>
            <appender-ref ref="CONSOLE_ERR"/>
            <appender-ref ref="FILE"/>
        </root>
    </log4j:configuration>
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ignite-sa
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ignite-role
rules:
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["get", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ignite-sa-rb
subjects:
- kind: ServiceAccount
  name: ignite-sa
  apiGroup: ""
roleRef:
  kind: Role
  name: ignite-role
  apiGroup: ""
---
apiVersion: v1
kind: Service
metadata:
  # Name of Ignite Service used by Kubernetes IP finder. 
  # The name must be equal to TcpDiscoveryKubernetesIpFinder.serviceName.
  name: ignite-svc
spec:
  clusterIP: None 
  ports:
    - port: 9042
  selector:
    # Must be equal to one of the labels set in Ignite pods'
    # deployement configuration.
    app: ignite
---
apiVersion: v1
kind: Service
metadata:
  # Name of Ignite Service used by Kubernetes IP finder. 
  # The name must be equal to TcpDiscoveryKubernetesIpFinder.serviceName.
  name: ignite-ext-svc
spec:
  ports:
    - name: rest
      port: 8080
    - name: sql
      port: 10800
  selector:
    # Must be equal to one of the labels set in Ignite pods'
    # deployement configuration.
    app: ignite
# An example of a Kubernetes configuration for Ignite pods deployment.
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: ignite
  name: ignite
spec:
  serviceName: ignite-svc
  selector:
    matchLabels:
      app: ignite
  podManagementPolicy: OrderedReady
  # A number of Ignite pods to be started by Kubernetes initially.
  replicas: 3
  template:
    metadata:
      labels:
        # This label has to be added to the selector's section of 
        # ignite-service.yaml so that the Kubernetes Ignite lookup service
        # can easily track all Ignite pods available deployed so far.
        app: ignite
    spec:
      serviceAccountName: ignite-sa
      containers:
        # Custom Ignite pod name.
      - name: ignite
        # Ignite Docker image. Kubernetes IP finder is supported starting from
        # Apache Ignite 2.3.0
        image: apacheignite/ignite:2.4.0
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 512Mi
        env:
        # Ignite's Docker image parameter. Adding the jar file that
        # contain TcpDiscoveryKubernetesIpFinder implementation.
        - name: OPTION_LIBS
          value: ignite-kubernetes,ignite-rest-http,ignite-log4j
        # Ignite's Docker image parameter. Passing the Ignite configuration
        # to use for an Ignite pod.
        - name: CONFIG_URI
          value: file:////data/ignite/example-kube.xml
        - name: IGNITE_QUIET
          value: "false"
        ports:
        # Ports to open.
        # Might be optional depending on your Kubernetes environment.
        - containerPort: 47100 # communication SPI port number.
        - containerPort: 47500 # discovery SPI port number.
        - containerPort: 49112 # JMX port number.
        - containerPort: 8080  # REST port number.
        - containerPort: 10800 # SQL port number.
        volumeMounts:
        # Mounting the storage with the Ignite configuration.
        - name: ignite-config
          mountPath: /data/ignite/example-kube.xml
          subPath: example-kube.xml
        - name: ignite-config
          mountPath: /data/ignite/log4j.xml
          subPath: log4j.xml
      volumes:
        - name: ignite-config
          configMap:
              name: ignite-cm
          